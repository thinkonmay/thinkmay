---
name: CI-g4play

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  github_env:
    name: GitHub Env Debug
    runs-on: ubuntu-latest

    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}


  build_daemon:
    name: Daemon Win
    runs-on: windows-2022

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: build
        run: |
          cd ./worker/daemon
          go mod download
          go build -o daemon.exe -ldflags="-H windowsgui" ./cmd/


      - name: Package Windows
        run: |
          mkdir -p artifacts
          cp ./worker/daemon/daemon.exe ./artifacts/daemon.exe


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daemon-windows
          path: artifacts/ 

  # build_steam:
  #   name: Build Steam Login
  #   runs-on: windows-2022


  #   steps:
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v3
  #       with:
  #         dotnet-version: '9.0.x'

  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #         token: ${{ secrets.GH_TOKEN }}

      
  #     - name: Prepare
  #       run: mkdir -p ./artifacts
  #     - name: Build solution
  #       run: |
  #         cd worker/steam 
  #         dotnet publish --sc true -o ../../artifacts /p:PublishSingleFile=true .

  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: steam-windows
  #         path: artifacts/ 

  build_package: 
    name: Package Win
    runs-on: windows-2022
    # needs: [build_daemon,build_steam]
    needs: [build_daemon]

    steps:
      - name: Install NSIS
        run: |
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop bucket add extras
          scoop install nsis

      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - uses: actions/download-artifact@v4
        name: download daemon
        with:
          name: daemon-windows
          path: daemon
      - uses: actions/download-artifact@v4
        name: download daemon
        with:
          name: steam-windows
          path: steam

      - name: build
        shell: powershell
        run: |
          mkdir -p artifacts
          cp daemon/daemon.exe ./assets
          # cp steam/steam-login.exe ./assets/store

          ./g4nsis.ps1
          cp g4play.exe ./artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msi-windows
          path: artifacts
  

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build_package]
    steps:
      - uses: actions/download-artifact@v4
        name: download msi
        with:
          name: msi-windows
          path: artifacts
      - name: upload
        shell: bash
        run: >-
          curl https://play.2.thinkmay.net:445/api/collections/binaries/records 
          -H "Content-Type: multipart/form-data" 
          --form "name=g4binary" 
          --form "file=@./artifacts/g4play.exe"  
          --progress-bar 

