---
name: CI-linux

on:
  push:
    branches: [master]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  github_env:
    name: GitHub Env Debug
    runs-on: ubuntu-latest

    steps:
      - name: Dump github context
        run: echo "$GITHUB_CONTEXT"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

  build_qemu:
    name: Qemu 
    runs-on: ubuntu-latest
    steps:
      - name: install
        run: >-
          sudo apt-get install -y libglib2.0-dev libfdt-dev libpixman-1-dev zlib1g-dev ninja-build 
            libaio-dev libbluetooth-dev libcapstone-dev libbrlapi-dev libbz2-dev
            libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev
            libibverbs-dev libjpeg8-dev libncurses5-dev libnuma-dev
            librbd-dev librdmacm-dev
            libsasl2-dev libsdl2-dev libseccomp-dev libsnappy-dev libssh-dev
            libvde-dev libvdeplug-dev libvte-2.91-dev libxen-dev liblzo2-dev
            valgrind xfslibs-dev 
            libnfs-dev libiscsi-dev
      - name: clone
        run: |
          git clone https://github.com/qemu/qemu -b stable-10.0
      - name: build
        run: |
          cd qemu
          mkdir $HOME/prefix
          ./configure --target-list=x86_64-softmmu  --enable-kvm --prefix=$HOME/prefix
          make -j$(nproc)
          make install
      - name: copy binary
        run: |
          mkdir -p artifacts
          cp -r $HOME/prefix artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: qemu-linux
          path: artifacts/

  build_proxy:
    name: Proxy Linux
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: build-srt
        run: |
          git clone https://github.com/Haivision/srt
          cd srt

          sudo apt-get update
          sudo apt-get upgrade
          sudo apt-get install tclsh pkg-config cmake libssl-dev build-essential
          ./configure && make
          sudo make install

      - name: build
        run: |
          cd ./worker/proxy/
          go mod download
          GOEXPERIMENT=greenteagc go build -o proxy  ./cmd/
      - name: copy binary
        run: |
          mkdir -p artifacts
          cp ./worker/proxy/proxy ./artifacts/proxy
          mkdir ./artifacts/srt
          cp /usr/local/lib/libsrt* ./artifacts/srt


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: proxy-linux
          path: artifacts/ 

  build_daemon:
    name: Daemon Linux
    runs-on: ubuntu-latest

    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.25

      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN }}

      - name: build
        run: |
          sudo apt install -y libevdev-dev
          cd ./worker/daemon
          go mod download
          GOEXPERIMENT=greenteagc go build -o daemon ./cmd/
          GOEXPERIMENT=greenteagc go build -o pb     ./cmd/pocketbase/


      - name: copy binary
        run: |
          mkdir -p artifacts
          cp ./worker/daemon/daemon ./artifacts/daemon
          cp ./worker/daemon/pb ./artifacts/pb


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: daemon-linux
          path: artifacts/ 

  build_package: 
    name: Package Linux
    runs-on: ubuntu-latest
    needs: [build_daemon,build_proxy,build_qemu]
    steps:
      - uses: actions/download-artifact@v4
        name: download daemon
        with:
          name: daemon-linux
          path: daemon
      - uses: actions/download-artifact@v4
        name: download proxy
        with:
          name: proxy-linux
          path: proxy
      - uses: actions/download-artifact@v4
        name: download qemu
        with:
          name: qemu-linux
          path: qemu

      - name: build
        run: |
          git clone https://github.com/thinkonmay/assets -b ubuntu

          sudo apt install -y zip
          mkdir -p artifacts
          mkdir -p assets/qemu

          cp daemon/daemon ./assets
          cp daemon/pb ./assets
          cp proxy/proxy ./assets
          cp -r qemu/* ./assets/qemu
          cp -r proxy/srt ./assets/srt
          chmod 777 -R ./assets
          zip -r artifacts/linux.zip ./assets


      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: msi-linux
          path: artifacts
  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: [build_package]

    steps:
      - uses: actions/download-artifact@v4
        name: download msi
        with:
          name: msi-linux
          path: artifacts
      - name: upload
        shell: bash
        run: >-
          curl https://play.2.thinkmay.net:445/api/collections/binaries/records 
          -H "Content-Type: multipart/form-data" 
          --form "name=thinkmay_binary" 
          --form "file=@./artifacts/linux.zip"  
          --progress-bar 
